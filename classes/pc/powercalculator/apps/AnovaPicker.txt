# Resource file for AnovaPicker - predefined models

# Property "keys" is the list of the models' keys.
# This defines the listing order
keys=one,two,twoa,thr,thra,rcb,rcb2,\
     ls,lsr1,lsr2,lsr3,gls,glsr1,glsr2,glsr3,\
     nes,ne2,nf,xov,sp,stp,nf21,nf12,sp21,sp12,\
     k2na,k2n1a,k2n2a

###############################################################
# Definitions follow.  The main key gives the title; optional
# subkeys are key.model, key.levels, key.random, key.reps
###############################################################

one=One-way ANOVA
one.model=treatment
one.levels=treatment 2
one.reps=10

two=Two-way ANOVA
two.model=row|col
two.levels=row 2   col 3
two.reps=10

twoa=Two-way ANOVA (additive model)
twoa.model=row + col
twoa.levels=row 2   col 3
twoa.reps=10

thr=Three-way ANOVA
thr.model=a | b | c
thr.reps=10


thra=Three-way ANOVA (Additive)
thra.model=a + b + c
thra.reps=10


rcb=Randomized complete-block design
rcb.model=Block + treatment
rcb.levels=Block 10  treatment 2
rcb.random=Block

rcb2=Two factors in blocks
rcb2.note=Each block has all factor combinations
rcb2.model=Block + a + b + a*b
rcb2.levels=Block 10   a 2   b 3
rcb2.random=Block

ls=Latin square design
ls.model=row + col + treat
ls.levels=row=col=/treat 5
ls.note=You may want row and /or col to be random

lsr1=Replicated Latin squares I
lsr1.note=Separate row and column effects
lsr1.model=rep + row(rep) + col(rep) + treat
lsr1.levels=rep 3  row=col=/treat 5
lsr1.random=rep row col

lsr2=Replicated Latin squares II
lsr2.note=Common columns, separate row effects
lsr2.model=rep + row(rep) + col + treat
lsr2.levels=rep 3  row=col=/treat 5
lsr2.random=rep row

lsr3=Replicated Latin squares III
lsr3.note=Common column and row effects
lsr3.model=rep + row + col + treat
lsr3.levels=rep 3  row=col=/treat 5
lsr3.random=rep

gls=Graeco-Latin square design
gls.note=No such design exists for 5 levels
gls.model=row + col + greek + treat
gls.levels=row=col=/greek=/treat 6

glsr1=Replicated Graeco-Latin squares I
glsr1.note=Separate row and col effects, common greek and treat
glsr1.model=rep + row(rep) + col(rep) + greek + treat
glsr1.levels=rep 3  row=col=/greek=/treat 6
glsr1.random=rep row col

glsr2=Replicated Graeco-Latin squares II
glsr2.note=Separate row, col, greek effects, common treat
glsr2.model=rep + row(rep) + col(rep) + greek(rep) + treat
glsr2.levels=rep 3  row=col=/greek=/treat 6
glsr2.random=rep row col greek

glsr3=Replicated Graeco-Latin squares - other
glsr3.note=To specify a factor with separate levels for each rep, nest it in rep
glsr3.model=rep + row(rep) + col + greek + treat
glsr3.levels=rep 3  row=col=/greek=/treat 6
glsr3.random rep row

nes=Nested design (1 stage)
nes.model=A + B(A)
nes.levels=A 2   B 5
nes.random=B
nes.reps=5

ne2=Nested design (2 stages)
ne2.model=A + B(A) + C(B)
ne2.levels=A 2   B 5   C 5
ne2.random=B C
ne2.reps=5

nf=Nested factorial design
nf.model=group + Subject(group) + treat + group*treat
nf.note=Subjects are randomized to groups, each subject receives all treatments
nf.levels=group 2   treat 3   Subject 10
nf.random=Subject

xov=Crossover design
xov.model=sequence + Subject(sequence) + period + treatment
xov.levels=Subject 5    /sequence=period=treatment 4
xov.random=Subject

sp=Split-plot design
sp.model=Block + whole + Block*whole + split + whole*split
sp.levels=Block 10 whole 4 split 4
sp.random=Block

stp=Strip-plot design
stp.model Block + row + Block*row + col + Block*col + row*col
stp.levels Block 10 row 4 col 4
stp.random Block

nf21=Nested factorial (2 whole-plot factors)
nf21.note=Groups are wp1*wp2 combs., each subj. gets all levels of sp
nf21.model=wp1|wp2 + Subj(wp1*wp2) + sp + wp1*sp + wp2*sp + wp1*wp2*sp
nf21.levels=Subj 5
nf21.random=Subj

nf12=Nested factorial (2 subplot factors)
nf12.note=Subjs assigned to wp, each subj. gets all sp1*sp2 combs.
nf12.model=wp + Subj(wp) + sp1|sp2 + wp*sp1 + wp*sp2 + wp*sp1*sp2
nf12.levels=Subj 5
nf12.random=Subj

sp21=Split plot (2 whole-plot factors)
sp21.note=Blocks divided into plots by wp1*wp2; each plot gets all levels of sp
sp21.model=Block|wp1|wp2 + sp + wp1*sp + wp2*sp + wp1*wp2*sp
sp21.levels=Block 5
sp21.random=Block

sp12=Split plot (2 subplot factors)
sp12.note=Blocks divided into plots by wp; each plot gets all sp1*sp2 comb.
sp12.model=Block|wp + sp1|sp2 + wp*sp1 + wp*sp2 + wp*sp1*sp2
sp12.levels=Block 5
sp12.random=Block

k2na=2^n or k^n (additive)
k2na.note=Add more factors as needed
k2na.model=a + b + c + d
k2na.levels=a=b=c=d 2

k2n1a=2^{n-1} or k^{n-1} (additive)
k2n1a.note=Add more factors as needed
k2n1a.model=a + b + c + d
k2n1a.levels=a=/b=c=d 2

k2n2a=2^{n-2} or k^{n-2} (additive)
k2n2a.note=Add more factors as needed
k2n2a.model=a + b + c + d + e
k2n2a.levels=a=/b=/c=d=e 2

